/** @type {import("@types/eslint").Linter.Config} */
module.exports = {
  root: true,
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: true,
    ecmaFeatures: {
      jsx: true,
    },
  },
  settings: {
    react: {
      version: 'detect',
    },
  },
  ignorePatterns: [
    '.DS_Store',
    'node_modules',
    'LICENSE',
    'package-lock.json',
    '.npmrc',
    '/*.js',
    '/linter/*',
    '/scripts',
    'dist',
    'out',
    'static',
    'vite.config.ts',
    'lingui.config.ts',
    '*.po',
    '*.png',
    '*.html',
    '*.md',
    '*.svg',
    '*.jpg',
    '*.sh',
    '*.yml',
    '*.dem',
    '*.vdm',
    '*.log',
    '*.json',
    '*.snap',
    '*.info',
    '*.icns',
    '*.ico',
    '*.css',
    '*.woff2',
    '*.cmd',
    '*.nsh',
    '*.data',
    '*.dll',
    'knip.ts',
    'tailwind.config.ts',
    'cs2-server-plugin',
  ],
  plugins: [
    '@typescript-eslint',
    'react',
    'react-hooks',
    'check-file',
    'eslint-plugin-local-rules',
    'deprecation',
    'lingui',
  ],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
    'plugin:prettier/recommended',
    'plugin:tailwindcss/recommended',
  ],
  rules: {
    'local-rules/no-react-redux-import': 'error',
    'local-rules/lingui-js-usage': 'error',
    'local-rules/no-missing-translations': [
      'warn',
      {
        allowedTexts: [
          '|',
          '•',
          ':',
          '●',
          '$',
          '#',
          '%',
          '+',
          'X',
          '-',
          '>',
          '?',
          'HLAE',
          'FFmpeg',
          'Valve',
          'FACEIT',
          'T',
          '⟵',
          'CS Demo Manager',
        ],
      },
    ],
    eqeqeq: 'error',
    '@typescript-eslint/consistent-type-imports': 'error',
    '@typescript-eslint/require-await': 'error',
    '@typescript-eslint/await-thenable': 'error',
    '@typescript-eslint/no-unused-vars': ['error', { args: 'after-used', ignoreRestSiblings: true }],
    '@typescript-eslint/no-inferrable-types': 0,
    '@typescript-eslint/ban-ts-comment': ['warn', { 'ts-ignore': 'allow-with-description' }],
    '@typescript-eslint/explicit-module-boundary-types': 0,
    '@typescript-eslint/naming-convention': [
      'error',
      {
        selector: 'variable',
        format: ['camelCase', 'PascalCase', 'UPPER_CASE'],
        filter: {
          regex: '^_$',
          match: false,
        },
      },
      {
        selector: 'function',
        format: ['camelCase', 'PascalCase'],
      },
      {
        selector: ['method', 'parameter', 'parameterProperty', 'accessor'],
        format: ['camelCase'],
      },
      {
        selector: ['class', 'interface', 'typeAlias', 'typeParameter'],
        format: ['PascalCase'],
      },
      {
        selector: 'objectLiteralMethod',
        format: ['camelCase', 'snake_case'],
      },
    ],
    'no-restricted-syntax': [
      'error',
      {
        selector: 'ExportDefaultDeclaration',
        message: 'Prefer named exports',
      },
      {
        selector: 'TSEnumDeclaration',
        message:
          "Don't declare enums, use an object instead.\nSee https://www.typescriptlang.org/docs/handbook/enums.html#objects-vs-enums or status.ts as an example",
      },
    ],
    'react/function-component-definition': ['error', { namedComponents: 'function-declaration' }],
    'react/jsx-boolean-value': ['error', 'always'],
    'react/prop-types': 0,
    'react/no-unescaped-entities': ['error', { forbid: ['>', '}'] }],
    'check-file/filename-naming-convention': [
      'error',
      {
        '**/*.{ts,tsx,mjs,md}': 'KEBAB_CASE',
      },
      {
        ignoreMiddleExtensions: true,
      },
    ],
    'check-file/no-index': 'error',
    'check-file/folder-naming-convention': [
      'error',
      {
        'src/**/': 'KEBAB_CASE',
      },
    ],
    'tailwindcss/classnames-order': 'off',
    'tailwindcss/no-custom-classname': [
      'warn',
      {
        whitelist: ['max-w-fit', 'max-w-0'],
      },
    ],
    'deprecation/deprecation': 'error',
    'lingui/no-unlocalized-strings': 'off',
    'lingui/t-call-in-function': 'error',
    'lingui/no-single-variables-to-translate': 'error',
    'lingui/no-expression-in-message': 'error',
    'lingui/no-single-tag-to-translate': 'error',
    'lingui/no-trans-inside-trans': 'error',
  },
};
